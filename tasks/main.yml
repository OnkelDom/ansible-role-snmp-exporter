---
- name: create system group
  group:
    name: "{{ snmp_exporter_system_group }}"
    system: true
    state: present
  when: snmp_exporter_system_group != "root"
  become: true
  tags: snmp_exporter

- name: create system user
  user:
    name: "{{ snmp_exporter_system_user }}"
    system: true
    shell: "/sbin/nologin"
    group: "{{ snmp_exporter_system_group }}"
    createhome: false
  when: snmp_exporter_system_user != "root"
  become: true
  tags: snmp_exporter

- name: create data directory
  file:
    path: "{{ snmp_exporter_config_dir }}"
    state: directory
    owner: "{{ snmp_exporter_system_user }}"
    group: "{{ snmp_exporter_system_group }}"
    mode: 0755
  become: true
  tags: snmp_exporter

- name: check if snmp_exporter is installed
  stat:
    path: "{{ snmp_exporter_binary_local_dir }}/snmp_exporter"
  register: __snmp_exporter_is_installed
  become: true
  tags: snmp_exporter

- name: download binary to local folder
  get_url:
    url: "https://github.com/prometheus/snmp_exporter/releases/download/v{{ snmp_exporter_version }}/snmp_exporter-{{ snmp_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp"
  environment: "{{ proxy_env }}"
  register: _download_binary
  until: _download_binary is success
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false
  become: true
  tags: snmp_exporter
  when: (not __snmp_exporter_is_installed.stat.exists)

- name: unpack binary
  unarchive:
    src: "/tmp/snmp_exporter-{{ snmp_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/snmp_exporter-{{ snmp_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/snmp_exporter"
  delegate_to: localhost
  check_mode: false
  become: true
  tags: snmp_exporter
  when: (not __snmp_exporter_is_installed.stat.exists)

- name: propagate binaries
  copy:
    src: "/tmp/snmp_exporter-{{ snmp_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/snmp_exporter"
    dest: "{{ snmp_exporter_binary_local_dir }}/snmp_exporter"
    mode: 0755
  notify: restart snmp exporter
  become: true
  tags: snmp_exporter
  when: (not __snmp_exporter_is_installed.stat.exists)

- name: download configuration file from github repository
  get_url:
    url: "https://raw.githubusercontent.com/prometheus/snmp_exporter/v{{ snmp_exporter_version }}/snmp.yml"
    dest: "{{ snmp_exporter_config_dir }}/config.yml"
    validate_certs: false
    owner: root
    group: root
    mode: 0644
  environment: "{{ proxy_env }}"
  register: _download_config
  until: _download_config is success
  retries: 5
  delay: 2
  notify:
    - reload snmp exporter
  when: snmp_exporter_config_file == ""
  become: true
  tags: snmp_exporter

- name: copy configuration file
  copy:
    src: "{{ snmp_exporter_config_file }}"
    dest: "{{ snmp_exporter_config_dir }}/{{ snmp_exporter_config_file }}"
    owner: root
    group: root
    mode: 0644
    validate: "{{ snmp_exporter_binary_local_dir }}/snmp_exporter --config.file=\"%s\" --dry-run"
  notify: reload snmp exporter
  when: snmp_exporter_config_file != ""
  become: true
  tags: 
    - snmp_exporter
    - snmp_exporter_config

- name: copy systemd service unit
  template:
    src: snmp_exporter.service.j2
    dest: /etc/systemd/system/snmp_exporter.service
    owner: root
    group: root
    mode: 0644
  notify: restart snmp exporter
  become: true
  tags: snmp_exporter

- name: ensure service is started and enabled
  systemd:
    daemon_reload: true
    name: snmp_exporter
    state: started
    enabled: true
  become: true
  tags: snmp_exporter